services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      target: runner
      args:
        NEXT_PUBLIC_BACKEND_URL: http://backend:5000
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=http://backend:5000
      - NEXT_PUBLIC_SITE_URL=http://localhost:3000
    depends_on:
      - backend
    # No dev command; Next standalone server starts via Dockerfile CMD

  # Backend Service
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
      target: builder
    ports:
      - '5000:5000'
      - '9229:9229' # For debugging
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/node_modules
      - /app/apps/backend/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://user:password@db:5432/classifieds_db
      - REDIS_URL=redis://redis:6379
      # Add other backend environment variables here (e.g., JWT_SECRET, SENDGRID_API_KEY)
    depends_on:
      - db
      - redis
    command: pnpm --filter backend start:debug

  # PostgreSQL Database Service
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: classifieds_db
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data # Persist database data

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data # Persist Redis data

  # Prometheus (metrics)
  prometheus:
    image: prom/prometheus:v2.54.1
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - '9090:9090'
    depends_on:
      - backend

  # Grafana (dashboards)
  grafana:
    image: grafana/grafana:11.2.0
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_HTTP_PORT=3001
    ports:
      - '3001:3001'
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  db_data:
  redis_data:
  prometheus_data:
  grafana_data: